import fs from 'fs';
import path from 'path';
import { TSESLint } from '@typescript-eslint/experimental-utils';

import { rules } from './rules';

const filePath = path.resolve(__dirname, '../src/index.ts');
const rawContent = `/* DON'T EDIT THIS FILE. This is generated by 'scripts/update-src-index.ts' */
import recommendedModule from './configs/recommended-module';
import recommendedScript from './configs/recommended-script';
import recommended from './configs/recommended';

export default {
  configs: {
    'recommended-module': require('./configs/recommended-module'),
    'recommended-script': require('./configs/recommended-script'),
    get recommended() {
      return recommended();
    },
  },
  rules: {
    ${rules
      .filter((rule) => !rule.deprecated)
      .map((rule) => `'${rule.name}': require('./rules/${rule.name}'),`)
      .join('\n')}

    // Deprecated rules.
    ${rules
      .filter((rule) => rule.deprecated)
      .map((rule) => `'${rule.name}': require('./rules/${rule.name}'),`)
      .join('\n')}
  },
}
`;

const run = async (): Promise<void> => {
  fs.writeFileSync(filePath, rawContent);

  await TSESLint.ESLint.outputFixes((await new TSESLint.ESLint({ fix: true }).lintFiles([filePath])) as never);
};

run().catch(console.error);
